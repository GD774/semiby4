<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gdu.semiby4.mapper.UserMapper">

  <resultMap type="UserDto" id="UserMap">
    <id      property="userNo"       column="USER_NO" />
    <result  property="userId"       column="USER_ID"/>
    <result  property="role"         column="ROLE" />
    <result  property="pw"           column="PW"/>
    <result  property="email"        column="EMAIL" />
    <result  property="name"         column="NAME" />
    <result  property="gender"       column="GENDER"/>
    <result  property="mobile"       column="MOBILE" />
    <result  property="pwModifyDt"   column="PW_MODIFY_DT" />
    <result  property="signupDt"     column="SIGNUP_DT" />
  </resultMap>

  <select id="getUserByMap"
          parameterType="Map"
          resultType="UserDto">
    SELECT USER_NO, USER_ID, ROLE, PW, EMAIL, NAME, GENDER, MOBILE, PW_MODIFY_DT, SIGNUP_DT
      FROM USER_T
    <where>
      <if test="userId!=null">USER_ID = #{userId}</if>
      <if test="pw!=null">AND PW = #{pw}</if>
    </where>
  </select>

  <insert id="insertUser"
          parameterType="UserDto">
    INSERT INTO USER_T (
      USER_NO
    , USER_ID
    , ROLE
    , PW
    , EMAIL
    , NAME
    , GENDER
    , MOBILE
    , PW_MODIFY_DT
    , SIGNUP_DT
    ) VALUES (
        USER_SEQ.NEXTVAL
	  , #{userId}
	  , 0
      , #{pw}
      , #{email}
      , #{name}
      , #{gender}
      , #{mobile}
      , CURRENT_DATE
      , CURRENT_DATE
    )
  </insert>

  <delete id="deleteUser">
    DELETE
      FROM USER_T
     WHERE USER_NO = #{userNo}
  </delete>
  

<select id="adminUserList"
         resultMap="UserMap">
    SELECT U.USER_NO, U.USER_ID, U.NAME, U.EMAIL, U.SIGNUP_DT,
    <!-- board_cnt, comment_cnt 로 추가 작업 혹은 삭제 예정 -->
           COUNT(DISTINCT B.BOARD_NO) AS BOARD_CNT,     
           COUNT(DISTINCT C.COMMENT_NO) AS COMMENT_CNT
      FROM USER_T U
 LEFT JOIN BOARD_T B ON U.USER_NO = B.USER_NO
 LEFT JOIN COMMENT_T C ON U.USER_NO = C.USER_NO
     GROUP BY U.USER_NO, U.USER_ID, U.NAME, U.EMAIL, U.SIGNUP_DT
     ORDER BY U.SIGNUP_DT DESC
</select>

<select id="getuserInfo" 
        resultType="UserDto">
 SELECT U.USER_NO, U.USER_ID, U.NAME, U.EMAIL, U.SIGNUP_DT,
           COUNT(DISTINCT B.BOARD_NO) AS BOARD_CNT,     
           COUNT(DISTINCT C.COMMENT_NO) AS COMMENT_CNT
      FROM USER_T U
 LEFT JOIN BOARD_T B ON U.USER_NO = B.USER_NO
 LEFT JOIN COMMENT_T C ON U.USER_NO = C.USER_NO
     WHERE U.USER_ID = #{userId, jdbcType=VARCHAR}
     GROUP BY U.USER_NO, U.USER_ID, U.NAME, U.EMAIL, U.SIGNUP_DT
     ORDER BY U.SIGNUP_DT DESC
</select>

<update id="dropUser">
  UPDATE USER_T
     SET ROLE = 2 
   WHERE USER_ID = #{userId}
</update>

<!-- 
<select id="getDisabledUser">
  SELECT * 
    FROM USER_T 
   WHERE EMAIL = #{email} AND ROLE = 2
</select>
 -->

<!-- 




<select id="adminUserList" resultMap="UserMap">
    SELECT * 
      FROM (SELECT * 
              FROM USER_T 
             ORDER BY USER_NO DESC) 
      <![CDATA[
      WHERE ROWNUM <=5 
      ]]>
  </select>
  

  
  
    <select id="adminUserList2"
          resultMap="UserMap">
  
     SELECT * FROM USER_T
     WHERE USER_ID = #{userId, jdbcType=VARCHAR}
  </select>
  
  
   -->
  
</mapper>
